// <auto-generated />
using System;
using Cars.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cars.Migrations
{
    [DbContext(typeof(CarsContext))]
    [Migration("20220524010718_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Cars.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Cars.Models.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<decimal>("LimitCredito")
                        .HasColumnType("decimal(7,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TarjCredito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoPersona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Cars.Models.Empleados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PorcientoComision")
                        .HasColumnType("float");

                    b.Property<int>("TandaLabor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Cars.Models.Inspeccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("CantidaCombustible")
                        .HasColumnType("decimal(7,2)");

                    b.Property<int?>("ClientesId")
                        .HasColumnType("int");

                    b.Property<int?>("EmpleadosId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Gato")
                        .HasColumnType("bit");

                    b.Property<bool>("GomaDelanteraLeft")
                        .HasColumnType("bit");

                    b.Property<bool>("GomaDelanteraRight")
                        .HasColumnType("bit");

                    b.Property<bool>("GomaRespuesta")
                        .HasColumnType("bit");

                    b.Property<bool>("GomaTraseraLeft")
                        .HasColumnType("bit");

                    b.Property<bool>("GomaTraseraRight")
                        .HasColumnType("bit");

                    b.Property<bool>("Ralladuras")
                        .HasColumnType("bit");

                    b.Property<bool>("RoturaCristal")
                        .HasColumnType("bit");

                    b.Property<int?>("VehiculosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientesId");

                    b.HasIndex("EmpleadosId");

                    b.HasIndex("VehiculosId");

                    b.ToTable("Inspeccion");
                });

            modelBuilder.Entity("Cars.Models.Marcas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("Cars.Models.Modelos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("MarcasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarcasId");

                    b.ToTable("Modelos");
                });

            modelBuilder.Entity("Cars.Models.RentaDevolucion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CantidadDias")
                        .HasColumnType("int");

                    b.Property<int?>("ClientesId")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpleadosId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaDevolucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRenta")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MontoDia")
                        .HasColumnType("decimal(7,2)");

                    b.Property<int>("Renta")
                        .HasColumnType("int");

                    b.Property<int?>("VehiculosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientesId");

                    b.HasIndex("EmpleadosId");

                    b.HasIndex("VehiculosId");

                    b.ToTable("RentaDevolucion");
                });

            modelBuilder.Entity("Cars.Models.TiposCombustibles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TiposCombustibles");
                });

            modelBuilder.Entity("Cars.Models.TiposVehiculos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TiposVehiculos");
                });

            modelBuilder.Entity("Cars.Models.Vehiculos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("MarcasId")
                        .HasColumnType("int");

                    b.Property<int?>("ModelosId")
                        .HasColumnType("int");

                    b.Property<string>("NChasis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NMotor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NPlaca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TiposCombustiblesId")
                        .HasColumnType("int");

                    b.Property<int?>("TiposVehiculosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarcasId");

                    b.HasIndex("ModelosId");

                    b.HasIndex("TiposCombustiblesId");

                    b.HasIndex("TiposVehiculosId");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("Cars.Models.Inspeccion", b =>
                {
                    b.HasOne("Cars.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesId");

                    b.HasOne("Cars.Models.Empleados", "Empleados")
                        .WithMany()
                        .HasForeignKey("EmpleadosId");

                    b.HasOne("Cars.Models.Vehiculos", "Vehiculos")
                        .WithMany()
                        .HasForeignKey("VehiculosId");

                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("Cars.Models.Modelos", b =>
                {
                    b.HasOne("Cars.Models.Marcas", "Marcas")
                        .WithMany()
                        .HasForeignKey("MarcasId");

                    b.Navigation("Marcas");
                });

            modelBuilder.Entity("Cars.Models.RentaDevolucion", b =>
                {
                    b.HasOne("Cars.Models.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("ClientesId");

                    b.HasOne("Cars.Models.Empleados", "Empleados")
                        .WithMany()
                        .HasForeignKey("EmpleadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cars.Models.Vehiculos", "Vehiculos")
                        .WithMany()
                        .HasForeignKey("VehiculosId");

                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("Cars.Models.Vehiculos", b =>
                {
                    b.HasOne("Cars.Models.Marcas", "Marcas")
                        .WithMany()
                        .HasForeignKey("MarcasId");

                    b.HasOne("Cars.Models.Modelos", "Modelos")
                        .WithMany()
                        .HasForeignKey("ModelosId");

                    b.HasOne("Cars.Models.TiposCombustibles", "TiposCombustibles")
                        .WithMany()
                        .HasForeignKey("TiposCombustiblesId");

                    b.HasOne("Cars.Models.TiposVehiculos", "TiposVehiculos")
                        .WithMany()
                        .HasForeignKey("TiposVehiculosId");

                    b.Navigation("Marcas");

                    b.Navigation("Modelos");

                    b.Navigation("TiposCombustibles");

                    b.Navigation("TiposVehiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
